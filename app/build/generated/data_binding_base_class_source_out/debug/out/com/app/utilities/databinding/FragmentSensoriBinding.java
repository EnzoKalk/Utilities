// Generated by view binder compiler. Do not edit!
package com.app.utilities.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import com.app.utilities.R;
import com.github.mikephil.charting.charts.LineChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSensoriBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView CSVRecommendationTextView;

  @NonNull
  public final TextView CSVTextView;

  @NonNull
  public final CheckBox accelCheckBox;

  @NonNull
  public final CheckBox allSensorsCheckBox;

  @NonNull
  public final LineChart chartAceleX;

  @NonNull
  public final LineChart chartAceleY;

  @NonNull
  public final LineChart chartAceleZ;

  @NonNull
  public final LineChart chartGirX;

  @NonNull
  public final LineChart chartGirY;

  @NonNull
  public final LineChart chartGirZ;

  @NonNull
  public final LineChart chartMagnetX;

  @NonNull
  public final LineChart chartMagnetY;

  @NonNull
  public final LineChart chartMagnetZ;

  @NonNull
  public final ImageButton direcotry;

  @NonNull
  public final CheckBox gyroCheckBox;

  @NonNull
  public final CheckBox magneCheckBox;

  @NonNull
  public final Button otherSensorsButton;

  @NonNull
  public final ImageButton pauseSensorsButton;

  @NonNull
  public final ImageButton recSensorsButton;

  @NonNull
  public final LinearLayout recSensorsLayout;

  @NonNull
  public final LinearLayout sensorsLayout;

  @NonNull
  public final Spinner speedAcc;

  @NonNull
  public final Spinner speedGir;

  @NonNull
  public final Spinner speedMag;

  @NonNull
  public final ImageButton stopSensorsButton;

  @NonNull
  public final TextView xGyroValue;

  @NonNull
  public final TextView xMagnoValue;

  @NonNull
  public final TextView xValue;

  @NonNull
  public final TextView yGyroValue;

  @NonNull
  public final TextView yMagnoValue;

  @NonNull
  public final TextView yValue;

  @NonNull
  public final TextView zGyroValue;

  @NonNull
  public final TextView zMagnoValue;

  @NonNull
  public final TextView zValue;

  private FragmentSensoriBinding(@NonNull NestedScrollView rootView,
      @NonNull TextView CSVRecommendationTextView, @NonNull TextView CSVTextView,
      @NonNull CheckBox accelCheckBox, @NonNull CheckBox allSensorsCheckBox,
      @NonNull LineChart chartAceleX, @NonNull LineChart chartAceleY,
      @NonNull LineChart chartAceleZ, @NonNull LineChart chartGirX, @NonNull LineChart chartGirY,
      @NonNull LineChart chartGirZ, @NonNull LineChart chartMagnetX,
      @NonNull LineChart chartMagnetY, @NonNull LineChart chartMagnetZ,
      @NonNull ImageButton direcotry, @NonNull CheckBox gyroCheckBox,
      @NonNull CheckBox magneCheckBox, @NonNull Button otherSensorsButton,
      @NonNull ImageButton pauseSensorsButton, @NonNull ImageButton recSensorsButton,
      @NonNull LinearLayout recSensorsLayout, @NonNull LinearLayout sensorsLayout,
      @NonNull Spinner speedAcc, @NonNull Spinner speedGir, @NonNull Spinner speedMag,
      @NonNull ImageButton stopSensorsButton, @NonNull TextView xGyroValue,
      @NonNull TextView xMagnoValue, @NonNull TextView xValue, @NonNull TextView yGyroValue,
      @NonNull TextView yMagnoValue, @NonNull TextView yValue, @NonNull TextView zGyroValue,
      @NonNull TextView zMagnoValue, @NonNull TextView zValue) {
    this.rootView = rootView;
    this.CSVRecommendationTextView = CSVRecommendationTextView;
    this.CSVTextView = CSVTextView;
    this.accelCheckBox = accelCheckBox;
    this.allSensorsCheckBox = allSensorsCheckBox;
    this.chartAceleX = chartAceleX;
    this.chartAceleY = chartAceleY;
    this.chartAceleZ = chartAceleZ;
    this.chartGirX = chartGirX;
    this.chartGirY = chartGirY;
    this.chartGirZ = chartGirZ;
    this.chartMagnetX = chartMagnetX;
    this.chartMagnetY = chartMagnetY;
    this.chartMagnetZ = chartMagnetZ;
    this.direcotry = direcotry;
    this.gyroCheckBox = gyroCheckBox;
    this.magneCheckBox = magneCheckBox;
    this.otherSensorsButton = otherSensorsButton;
    this.pauseSensorsButton = pauseSensorsButton;
    this.recSensorsButton = recSensorsButton;
    this.recSensorsLayout = recSensorsLayout;
    this.sensorsLayout = sensorsLayout;
    this.speedAcc = speedAcc;
    this.speedGir = speedGir;
    this.speedMag = speedMag;
    this.stopSensorsButton = stopSensorsButton;
    this.xGyroValue = xGyroValue;
    this.xMagnoValue = xMagnoValue;
    this.xValue = xValue;
    this.yGyroValue = yGyroValue;
    this.yMagnoValue = yMagnoValue;
    this.yValue = yValue;
    this.zGyroValue = zGyroValue;
    this.zMagnoValue = zMagnoValue;
    this.zValue = zValue;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSensoriBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSensoriBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment__sensori, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSensoriBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CSVRecommendationTextView;
      TextView CSVRecommendationTextView = rootView.findViewById(id);
      if (CSVRecommendationTextView == null) {
        break missingId;
      }

      id = R.id.CSVTextView;
      TextView CSVTextView = rootView.findViewById(id);
      if (CSVTextView == null) {
        break missingId;
      }

      id = R.id.accelCheckBox;
      CheckBox accelCheckBox = rootView.findViewById(id);
      if (accelCheckBox == null) {
        break missingId;
      }

      id = R.id.allSensorsCheckBox;
      CheckBox allSensorsCheckBox = rootView.findViewById(id);
      if (allSensorsCheckBox == null) {
        break missingId;
      }

      id = R.id.chartAceleX;
      LineChart chartAceleX = rootView.findViewById(id);
      if (chartAceleX == null) {
        break missingId;
      }

      id = R.id.chartAceleY;
      LineChart chartAceleY = rootView.findViewById(id);
      if (chartAceleY == null) {
        break missingId;
      }

      id = R.id.chartAceleZ;
      LineChart chartAceleZ = rootView.findViewById(id);
      if (chartAceleZ == null) {
        break missingId;
      }

      id = R.id.chartGirX;
      LineChart chartGirX = rootView.findViewById(id);
      if (chartGirX == null) {
        break missingId;
      }

      id = R.id.chartGirY;
      LineChart chartGirY = rootView.findViewById(id);
      if (chartGirY == null) {
        break missingId;
      }

      id = R.id.chartGirZ;
      LineChart chartGirZ = rootView.findViewById(id);
      if (chartGirZ == null) {
        break missingId;
      }

      id = R.id.chartMagnetX;
      LineChart chartMagnetX = rootView.findViewById(id);
      if (chartMagnetX == null) {
        break missingId;
      }

      id = R.id.chartMagnetY;
      LineChart chartMagnetY = rootView.findViewById(id);
      if (chartMagnetY == null) {
        break missingId;
      }

      id = R.id.chartMagnetZ;
      LineChart chartMagnetZ = rootView.findViewById(id);
      if (chartMagnetZ == null) {
        break missingId;
      }

      id = R.id.direcotry;
      ImageButton direcotry = rootView.findViewById(id);
      if (direcotry == null) {
        break missingId;
      }

      id = R.id.gyroCheckBox;
      CheckBox gyroCheckBox = rootView.findViewById(id);
      if (gyroCheckBox == null) {
        break missingId;
      }

      id = R.id.magneCheckBox;
      CheckBox magneCheckBox = rootView.findViewById(id);
      if (magneCheckBox == null) {
        break missingId;
      }

      id = R.id.otherSensorsButton;
      Button otherSensorsButton = rootView.findViewById(id);
      if (otherSensorsButton == null) {
        break missingId;
      }

      id = R.id.pauseSensorsButton;
      ImageButton pauseSensorsButton = rootView.findViewById(id);
      if (pauseSensorsButton == null) {
        break missingId;
      }

      id = R.id.recSensorsButton;
      ImageButton recSensorsButton = rootView.findViewById(id);
      if (recSensorsButton == null) {
        break missingId;
      }

      id = R.id.recSensorsLayout;
      LinearLayout recSensorsLayout = rootView.findViewById(id);
      if (recSensorsLayout == null) {
        break missingId;
      }

      id = R.id.sensorsLayout;
      LinearLayout sensorsLayout = rootView.findViewById(id);
      if (sensorsLayout == null) {
        break missingId;
      }

      id = R.id.speedAcc;
      Spinner speedAcc = rootView.findViewById(id);
      if (speedAcc == null) {
        break missingId;
      }

      id = R.id.speedGir;
      Spinner speedGir = rootView.findViewById(id);
      if (speedGir == null) {
        break missingId;
      }

      id = R.id.speedMag;
      Spinner speedMag = rootView.findViewById(id);
      if (speedMag == null) {
        break missingId;
      }

      id = R.id.stopSensorsButton;
      ImageButton stopSensorsButton = rootView.findViewById(id);
      if (stopSensorsButton == null) {
        break missingId;
      }

      id = R.id.xGyroValue;
      TextView xGyroValue = rootView.findViewById(id);
      if (xGyroValue == null) {
        break missingId;
      }

      id = R.id.xMagnoValue;
      TextView xMagnoValue = rootView.findViewById(id);
      if (xMagnoValue == null) {
        break missingId;
      }

      id = R.id.xValue;
      TextView xValue = rootView.findViewById(id);
      if (xValue == null) {
        break missingId;
      }

      id = R.id.yGyroValue;
      TextView yGyroValue = rootView.findViewById(id);
      if (yGyroValue == null) {
        break missingId;
      }

      id = R.id.yMagnoValue;
      TextView yMagnoValue = rootView.findViewById(id);
      if (yMagnoValue == null) {
        break missingId;
      }

      id = R.id.yValue;
      TextView yValue = rootView.findViewById(id);
      if (yValue == null) {
        break missingId;
      }

      id = R.id.zGyroValue;
      TextView zGyroValue = rootView.findViewById(id);
      if (zGyroValue == null) {
        break missingId;
      }

      id = R.id.zMagnoValue;
      TextView zMagnoValue = rootView.findViewById(id);
      if (zMagnoValue == null) {
        break missingId;
      }

      id = R.id.zValue;
      TextView zValue = rootView.findViewById(id);
      if (zValue == null) {
        break missingId;
      }

      return new FragmentSensoriBinding((NestedScrollView) rootView, CSVRecommendationTextView,
          CSVTextView, accelCheckBox, allSensorsCheckBox, chartAceleX, chartAceleY, chartAceleZ,
          chartGirX, chartGirY, chartGirZ, chartMagnetX, chartMagnetY, chartMagnetZ, direcotry,
          gyroCheckBox, magneCheckBox, otherSensorsButton, pauseSensorsButton, recSensorsButton,
          recSensorsLayout, sensorsLayout, speedAcc, speedGir, speedMag, stopSensorsButton,
          xGyroValue, xMagnoValue, xValue, yGyroValue, yMagnoValue, yValue, zGyroValue, zMagnoValue,
          zValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.app.utilities.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import com.app.utilities.R;
import com.github.mikephil.charting.charts.LineChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAltriSensoriBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView CSVRecommendationTextView;

  @NonNull
  public final TextView CSVTextView;

  @NonNull
  public final CheckBox allOtherSensorsCheckBox;

  @NonNull
  public final ImageButton back;

  @NonNull
  public final LineChart chartHumidity;

  @NonNull
  public final LineChart chartLight;

  @NonNull
  public final LineChart chartPressure;

  @NonNull
  public final LineChart chartTemperature;

  @NonNull
  public final ImageButton direcotry;

  @NonNull
  public final CheckBox humCheckBox;

  @NonNull
  public final TextView humidity;

  @NonNull
  public final CheckBox ligCheckBox;

  @NonNull
  public final TextView light;

  @NonNull
  public final LinearLayout otherSensorsLayout;

  @NonNull
  public final TextView otherSensorsTextView;

  @NonNull
  public final ImageButton pauseOtherSensorsButton;

  @NonNull
  public final CheckBox presCheckBox;

  @NonNull
  public final TextView pressure;

  @NonNull
  public final ImageButton recOtherSensorsButton;

  @NonNull
  public final LinearLayout recOtherSensorsLayout;

  @NonNull
  public final Spinner speedHum;

  @NonNull
  public final Spinner speedLig;

  @NonNull
  public final Spinner speedPre;

  @NonNull
  public final Spinner speedTem;

  @NonNull
  public final ImageButton stopOtherSensorsButton;

  @NonNull
  public final CheckBox tempCheckBox;

  @NonNull
  public final TextView temperature;

  private ActivityAltriSensoriBinding(@NonNull NestedScrollView rootView,
      @NonNull TextView CSVRecommendationTextView, @NonNull TextView CSVTextView,
      @NonNull CheckBox allOtherSensorsCheckBox, @NonNull ImageButton back,
      @NonNull LineChart chartHumidity, @NonNull LineChart chartLight,
      @NonNull LineChart chartPressure, @NonNull LineChart chartTemperature,
      @NonNull ImageButton direcotry, @NonNull CheckBox humCheckBox, @NonNull TextView humidity,
      @NonNull CheckBox ligCheckBox, @NonNull TextView light,
      @NonNull LinearLayout otherSensorsLayout, @NonNull TextView otherSensorsTextView,
      @NonNull ImageButton pauseOtherSensorsButton, @NonNull CheckBox presCheckBox,
      @NonNull TextView pressure, @NonNull ImageButton recOtherSensorsButton,
      @NonNull LinearLayout recOtherSensorsLayout, @NonNull Spinner speedHum,
      @NonNull Spinner speedLig, @NonNull Spinner speedPre, @NonNull Spinner speedTem,
      @NonNull ImageButton stopOtherSensorsButton, @NonNull CheckBox tempCheckBox,
      @NonNull TextView temperature) {
    this.rootView = rootView;
    this.CSVRecommendationTextView = CSVRecommendationTextView;
    this.CSVTextView = CSVTextView;
    this.allOtherSensorsCheckBox = allOtherSensorsCheckBox;
    this.back = back;
    this.chartHumidity = chartHumidity;
    this.chartLight = chartLight;
    this.chartPressure = chartPressure;
    this.chartTemperature = chartTemperature;
    this.direcotry = direcotry;
    this.humCheckBox = humCheckBox;
    this.humidity = humidity;
    this.ligCheckBox = ligCheckBox;
    this.light = light;
    this.otherSensorsLayout = otherSensorsLayout;
    this.otherSensorsTextView = otherSensorsTextView;
    this.pauseOtherSensorsButton = pauseOtherSensorsButton;
    this.presCheckBox = presCheckBox;
    this.pressure = pressure;
    this.recOtherSensorsButton = recOtherSensorsButton;
    this.recOtherSensorsLayout = recOtherSensorsLayout;
    this.speedHum = speedHum;
    this.speedLig = speedLig;
    this.speedPre = speedPre;
    this.speedTem = speedTem;
    this.stopOtherSensorsButton = stopOtherSensorsButton;
    this.tempCheckBox = tempCheckBox;
    this.temperature = temperature;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAltriSensoriBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAltriSensoriBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_altri_sensori, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAltriSensoriBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CSVRecommendationTextView;
      TextView CSVRecommendationTextView = rootView.findViewById(id);
      if (CSVRecommendationTextView == null) {
        break missingId;
      }

      id = R.id.CSVTextView;
      TextView CSVTextView = rootView.findViewById(id);
      if (CSVTextView == null) {
        break missingId;
      }

      id = R.id.allOtherSensorsCheckBox;
      CheckBox allOtherSensorsCheckBox = rootView.findViewById(id);
      if (allOtherSensorsCheckBox == null) {
        break missingId;
      }

      id = R.id.back;
      ImageButton back = rootView.findViewById(id);
      if (back == null) {
        break missingId;
      }

      id = R.id.chartHumidity;
      LineChart chartHumidity = rootView.findViewById(id);
      if (chartHumidity == null) {
        break missingId;
      }

      id = R.id.chartLight;
      LineChart chartLight = rootView.findViewById(id);
      if (chartLight == null) {
        break missingId;
      }

      id = R.id.chartPressure;
      LineChart chartPressure = rootView.findViewById(id);
      if (chartPressure == null) {
        break missingId;
      }

      id = R.id.chartTemperature;
      LineChart chartTemperature = rootView.findViewById(id);
      if (chartTemperature == null) {
        break missingId;
      }

      id = R.id.direcotry;
      ImageButton direcotry = rootView.findViewById(id);
      if (direcotry == null) {
        break missingId;
      }

      id = R.id.humCheckBox;
      CheckBox humCheckBox = rootView.findViewById(id);
      if (humCheckBox == null) {
        break missingId;
      }

      id = R.id.humidity;
      TextView humidity = rootView.findViewById(id);
      if (humidity == null) {
        break missingId;
      }

      id = R.id.ligCheckBox;
      CheckBox ligCheckBox = rootView.findViewById(id);
      if (ligCheckBox == null) {
        break missingId;
      }

      id = R.id.light;
      TextView light = rootView.findViewById(id);
      if (light == null) {
        break missingId;
      }

      id = R.id.otherSensorsLayout;
      LinearLayout otherSensorsLayout = rootView.findViewById(id);
      if (otherSensorsLayout == null) {
        break missingId;
      }

      id = R.id.otherSensorsTextView;
      TextView otherSensorsTextView = rootView.findViewById(id);
      if (otherSensorsTextView == null) {
        break missingId;
      }

      id = R.id.pauseOtherSensorsButton;
      ImageButton pauseOtherSensorsButton = rootView.findViewById(id);
      if (pauseOtherSensorsButton == null) {
        break missingId;
      }

      id = R.id.presCheckBox;
      CheckBox presCheckBox = rootView.findViewById(id);
      if (presCheckBox == null) {
        break missingId;
      }

      id = R.id.pressure;
      TextView pressure = rootView.findViewById(id);
      if (pressure == null) {
        break missingId;
      }

      id = R.id.recOtherSensorsButton;
      ImageButton recOtherSensorsButton = rootView.findViewById(id);
      if (recOtherSensorsButton == null) {
        break missingId;
      }

      id = R.id.recOtherSensorsLayout;
      LinearLayout recOtherSensorsLayout = rootView.findViewById(id);
      if (recOtherSensorsLayout == null) {
        break missingId;
      }

      id = R.id.speedHum;
      Spinner speedHum = rootView.findViewById(id);
      if (speedHum == null) {
        break missingId;
      }

      id = R.id.speedLig;
      Spinner speedLig = rootView.findViewById(id);
      if (speedLig == null) {
        break missingId;
      }

      id = R.id.speedPre;
      Spinner speedPre = rootView.findViewById(id);
      if (speedPre == null) {
        break missingId;
      }

      id = R.id.speedTem;
      Spinner speedTem = rootView.findViewById(id);
      if (speedTem == null) {
        break missingId;
      }

      id = R.id.stopOtherSensorsButton;
      ImageButton stopOtherSensorsButton = rootView.findViewById(id);
      if (stopOtherSensorsButton == null) {
        break missingId;
      }

      id = R.id.tempCheckBox;
      CheckBox tempCheckBox = rootView.findViewById(id);
      if (tempCheckBox == null) {
        break missingId;
      }

      id = R.id.temperature;
      TextView temperature = rootView.findViewById(id);
      if (temperature == null) {
        break missingId;
      }

      return new ActivityAltriSensoriBinding((NestedScrollView) rootView, CSVRecommendationTextView,
          CSVTextView, allOtherSensorsCheckBox, back, chartHumidity, chartLight, chartPressure,
          chartTemperature, direcotry, humCheckBox, humidity, ligCheckBox, light,
          otherSensorsLayout, otherSensorsTextView, pauseOtherSensorsButton, presCheckBox, pressure,
          recOtherSensorsButton, recOtherSensorsLayout, speedHum, speedLig, speedPre, speedTem,
          stopOtherSensorsButton, tempCheckBox, temperature);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

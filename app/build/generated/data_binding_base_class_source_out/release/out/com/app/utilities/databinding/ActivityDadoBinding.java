// Generated by view binder compiler. Do not edit!
package com.app.utilities.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.utilities.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDadoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton back;

  @NonNull
  public final LinearLayout diceLayout;

  @NonNull
  public final TextView diceNumber;

  @NonNull
  public final TextView leftDiceNumber;

  @NonNull
  public final Button oneDice;

  @NonNull
  public final TextView rightDiceNumber;

  @NonNull
  public final Button roll;

  @NonNull
  public final Toolbar toolbarDice;

  @NonNull
  public final Button twoDices;

  private ActivityDadoBinding(@NonNull LinearLayout rootView, @NonNull ImageButton back,
      @NonNull LinearLayout diceLayout, @NonNull TextView diceNumber,
      @NonNull TextView leftDiceNumber, @NonNull Button oneDice, @NonNull TextView rightDiceNumber,
      @NonNull Button roll, @NonNull Toolbar toolbarDice, @NonNull Button twoDices) {
    this.rootView = rootView;
    this.back = back;
    this.diceLayout = diceLayout;
    this.diceNumber = diceNumber;
    this.leftDiceNumber = leftDiceNumber;
    this.oneDice = oneDice;
    this.rightDiceNumber = rightDiceNumber;
    this.roll = roll;
    this.toolbarDice = toolbarDice;
    this.twoDices = twoDices;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDadoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDadoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dado, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDadoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back;
      ImageButton back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.diceLayout;
      LinearLayout diceLayout = ViewBindings.findChildViewById(rootView, id);
      if (diceLayout == null) {
        break missingId;
      }

      id = R.id.diceNumber;
      TextView diceNumber = ViewBindings.findChildViewById(rootView, id);
      if (diceNumber == null) {
        break missingId;
      }

      id = R.id.leftDiceNumber;
      TextView leftDiceNumber = ViewBindings.findChildViewById(rootView, id);
      if (leftDiceNumber == null) {
        break missingId;
      }

      id = R.id.oneDice;
      Button oneDice = ViewBindings.findChildViewById(rootView, id);
      if (oneDice == null) {
        break missingId;
      }

      id = R.id.rightDiceNumber;
      TextView rightDiceNumber = ViewBindings.findChildViewById(rootView, id);
      if (rightDiceNumber == null) {
        break missingId;
      }

      id = R.id.roll;
      Button roll = ViewBindings.findChildViewById(rootView, id);
      if (roll == null) {
        break missingId;
      }

      id = R.id.toolbarDice;
      Toolbar toolbarDice = ViewBindings.findChildViewById(rootView, id);
      if (toolbarDice == null) {
        break missingId;
      }

      id = R.id.twoDices;
      Button twoDices = ViewBindings.findChildViewById(rootView, id);
      if (twoDices == null) {
        break missingId;
      }

      return new ActivityDadoBinding((LinearLayout) rootView, back, diceLayout, diceNumber,
          leftDiceNumber, oneDice, rightDiceNumber, roll, toolbarDice, twoDices);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

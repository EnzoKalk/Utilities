// Generated by view binder compiler. Do not edit!
package com.app.utilities.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.utilities.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityArmeasureBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageButton back;

  @NonNull
  public final Button btnHeight;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final ImageButton btnShare;

  @NonNull
  public final Button btnWidth;

  @NonNull
  public final ImageButton question;

  @NonNull
  public final ImageButton refresh;

  @NonNull
  public final SeekBar skHeightControl;

  @NonNull
  public final TextView text;

  private ActivityArmeasureBinding(@NonNull FrameLayout rootView, @NonNull ImageButton back,
      @NonNull Button btnHeight, @NonNull Button btnSave, @NonNull ImageButton btnShare,
      @NonNull Button btnWidth, @NonNull ImageButton question, @NonNull ImageButton refresh,
      @NonNull SeekBar skHeightControl, @NonNull TextView text) {
    this.rootView = rootView;
    this.back = back;
    this.btnHeight = btnHeight;
    this.btnSave = btnSave;
    this.btnShare = btnShare;
    this.btnWidth = btnWidth;
    this.question = question;
    this.refresh = refresh;
    this.skHeightControl = skHeightControl;
    this.text = text;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityArmeasureBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityArmeasureBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_armeasure, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityArmeasureBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back;
      ImageButton back = rootView.findViewById(id);
      if (back == null) {
        break missingId;
      }

      id = R.id.btn_height;
      Button btnHeight = rootView.findViewById(id);
      if (btnHeight == null) {
        break missingId;
      }

      id = R.id.btn_save;
      Button btnSave = rootView.findViewById(id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.btn_share;
      ImageButton btnShare = rootView.findViewById(id);
      if (btnShare == null) {
        break missingId;
      }

      id = R.id.btn_width;
      Button btnWidth = rootView.findViewById(id);
      if (btnWidth == null) {
        break missingId;
      }

      id = R.id.question;
      ImageButton question = rootView.findViewById(id);
      if (question == null) {
        break missingId;
      }

      id = R.id.refresh;
      ImageButton refresh = rootView.findViewById(id);
      if (refresh == null) {
        break missingId;
      }

      id = R.id.sk_height_control;
      SeekBar skHeightControl = rootView.findViewById(id);
      if (skHeightControl == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = rootView.findViewById(id);
      if (text == null) {
        break missingId;
      }

      return new ActivityArmeasureBinding((FrameLayout) rootView, back, btnHeight, btnSave,
          btnShare, btnWidth, question, refresh, skHeightControl, text);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
